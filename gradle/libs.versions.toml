[versions]
### PROJECT ###
agp = "8.9.0-alpha07"
appauth = "0.11.1"
kotlin = "2.1.20"
ksp = "2.1.20-2.0.0"
versionCode = "1"
versionName = "1.0.0"

### LIBRARIES ###
androidxLifecycle = "2.8.7"
androidxComposeNavigation = "2.8.9"
androidxRoom = "2.7.1"
compose-bom = "2025.04.01"
androidxHiltNavigationCompose = "1.2.0"
hilt = "2.56.1"
kotlinxSerializationJson = "1.8.0"
coil-compose = "2.5.0"
datastore = "1.1.5"
junit = "4.13.2"
androidxTest = "1.6.1"
androidxTestJunit = "1.2.1"
mockito = "5.11.0"
mockito-kotlin = "5.2.1"
appcompat = "1.7.0"
activity = "1.10.1"
accompanist = "0.27.0"
protobufPlugin = "0.9.4"
# Stay on 4.26.1 due to https://github.com/firebase/firebase-android-sdk/issues/5997
#noinspection GradleDependency
protobuf = "4.26.1"
ktor = "3.1.2"
aallam-openai = "4.0.1"
kotlinxDatetime = "0.6.2"
markdownRenderer = "0.33.0"
mcp = "0.5.0"
androidxSecurity = "1.1.0-alpha07"

[libraries]

### COMPOSE ###
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
androidx-compose-runtime = { group = "androidx.compose.runtime", name = "runtime"}
androidx-compose-animation = { group = "androidx.compose.animation", name = "animation"}
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui"}
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-compose-material-iconsExtended = { group = "androidx.compose.material", name = "material-icons-extended" }
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3" }

### ANDROIDX ###
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtime-compose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidxLifecycle" }

androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "androidxComposeNavigation" }
androidx-hilt-navigation = { group = "androidx.hilt", name = "hilt-navigation", version.ref = "androidxHiltNavigationCompose" }
androidx-hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "androidxHiltNavigationCompose" }

androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-activity-ktx = { group = "androidx.activity", name = "activity-ktx", version.ref = "activity" }

### ROOM ###
androidx-room-common = { module = "androidx.room:room-common", version.ref = "androidxRoom" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidxRoom" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidxRoom" }
androidx-room-paging = { module = "androidx.room:room-paging", version.ref = "androidxRoom" }

### DATASTORE ###
androidx-datastore = { group = "androidx.datastore", name = "datastore", version.ref = "datastore" }
androidx-datastore-core = { group = "androidx.datastore", name = "datastore-core", version.ref = "datastore" }
androidx-security-crypto = { module = "androidx.security:security-crypto", version.ref = "androidxSecurity" }
appauth = { module = "net.openid:appauth", version.ref = "appauth" }
protobuf-kotlin-lite = { group = "com.google.protobuf", name = "protobuf-kotlin-lite", version.ref = "protobuf" }
protobuf-protoc = { group = "com.google.protobuf", name = "protoc", version.ref = "protobuf" }

### HILT ###
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-android-compiler = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "hilt" }

### NETWORKING ###
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }


### OTHER ###
coil-kt = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil-compose" }
accompanist = { group = "com.google.accompanist", name = "accompanist-systemuicontroller", version.ref = "accompanist" }
openai-client = { group = "com.aallam.openai", name = "openai-client", version.ref = "aallam-openai" }
kotlinx-date-time = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinxDatetime" }

### MARKDOWN ###
markdown-renderer = { group = "com.mikepenz" ,name = "multiplatform-markdown-renderer-android", version.ref = "markdownRenderer" }
markdown-renderer-m3 = { group = "com.mikepenz" ,name = "multiplatform-markdown-renderer-m3", version.ref = "markdownRenderer" }
markdown-renderer-code = { group = "com.mikepenz" ,name = "multiplatform-markdown-renderer-code", version.ref = "markdownRenderer" }


### TESTING ###
junit = { module = "junit:junit", version.ref = "junit" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidxTest" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidxTestJunit" }

### MCP ###
mcp = { group = "io.modelcontextprotocol", name = "kotlin-sdk", version.ref = "mcp" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
protobuf = { id = "com.google.protobuf", version.ref = "protobufPlugin" }
androidx-room = { id = "androidx.room", version.ref = "androidxRoom" }

[bundles]
ktor = [
    "ktor-client-cio",
    "ktor-client-content-negotiation",
    "ktor-client-core",
    "ktor-client-logging",
    "ktor-serialization-kotlinx-json"
]